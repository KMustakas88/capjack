{"ast":null,"code":"import _classCallCheck from \"/Users/gmustakas/projects/rincon/capjack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gmustakas/projects/rincon/capjack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gmustakas/projects/rincon/capjack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gmustakas/projects/rincon/capjack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gmustakas/projects/rincon/capjack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gmustakas/projects/rincon/capjack/frontend/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\nimport React, { Component } from \"react\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      segments: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var data;\n      axios.get('http://localhost:8000/api/segments-list').then(function (res) {\n        data = res.data;\n\n        _this2.setState({\n          segments: data\n        });\n      }).catch(function (err) {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, this.state.segments.map(function (segment) {\n        return (\n          /*#__PURE__*/\n          // <div key={id}>\n          React.createElement(\"div\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }\n          }, segment.name, \" \"), /*#__PURE__*/React.createElement(\"footer\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }\n          }, \"--- by\", /*#__PURE__*/React.createElement(\"cite\", {\n            title: \"Source Title\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }\n          }, segment.name)))) // </div>\n\n        );\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n\n# Example 1\nconst todoItems = [\n  {\n    id: 1,\n    title: \"Go to Market\",\n    description: \"Buy ingredients to prepare dinner\",\n    completed: true,\n  },\n  {\n    id: 2,\n    title: \"Study\",\n    description: \"Read Algebra and History textbook for the upcoming test\",\n    completed: false,\n  },\n  {\n    id: 3,\n    title: \"Sammy's books\",\n    description: \"Go to library to return Sammy's books\",\n    completed: true,\n  },\n  {\n    id: 4,\n    title: \"Article\",\n    description: \"Write article on how to use Django with React\",\n    completed: false,\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      todoList: todoItems,\n    };\n  }\n\n  displayCompleted = (status) => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n\n    return this.setState({ viewCompleted: false });\n  };\n\n  renderTabList = () => {\n    return (\n      <div className=\"nav nav-tabs\">\n        <span\n          className={this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"}\n          onClick={() => this.displayCompleted(true)}\n        >\n          Complete\n        </span>\n        <span\n          className={this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"}\n          onClick={() => this.displayCompleted(false)}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      (item) => item.completed == viewCompleted\n    );\n\n    return newItems.map((item) => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            className=\"btn btn-secondary mr-2\"\n          >\n            Edit\n          </button>\n          <button\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </span>\n      </li>\n    ));\n  };\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"mb-4\">\n                <button\n                  className=\"btn btn-primary\"\n                >\n                  Add task\n                </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush border-top-0\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n*/","map":{"version":3,"sources":["/Users/gmustakas/projects/rincon/capjack/frontend/src/App.js"],"names":["axios","React","Component","App","state","segments","data","get","then","res","setState","catch","err","map","segment","name"],"mappings":";;;;;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,G;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAG;AADP,K;;;;;;wCAIY;AAAA;;AAEhB,UAAIC,IAAJ;AAEAN,MAAAA,KAAK,CAACO,GAAN,CAAU,yCAAV,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACTH,QAAAA,IAAI,GAAGG,GAAG,CAACH,IAAX;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AACVL,UAAAA,QAAQ,EAAGC;AADD,SAAd;AAGH,OAND,EAOCK,KAPD,CAOO,UAAAC,GAAG,EAAI,CAAE,CAPhB;AAQH;;;6BAEM;AAAA;;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAwB,UAACC,OAAD;AAAA;AAAA;AACzB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,OAAO,CAACC,IAAb,MADN,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACA;AAAM,YAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACCD,OAAO,CAACC,IADT,CADA,CAFN,CADN,CAFyB,CAWzB;;AAXyB;AAAA,OAAxB,CADP,CADF;AAkBD;;;;EAvCed,KAAK,CAACC,S;;AA0CxB,eAAeC,GAAf;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport React, { Component } from \"react\";\n\n  \nclass App extends React.Component {\n  \n    state = {\n        segments : [],\n    }\n  \n    componentDidMount() {\n  \n        let data ;\n  \n        axios.get('http://localhost:8000/api/segments-list')\n        .then(res => {\n            data = res.data;\n            this.setState({\n                segments : data    \n            });\n        })\n        .catch(err => {})\n    }\n  \n  render() {\n    return(\n      <div>\n            {this.state.segments.map((segment) =>  (\n            // <div key={id}>\n            <div >\n                  <div >\n                        <h1>{segment.name} </h1>\n                        <footer >--- by\n                        <cite title=\"Source Title\">\n                        {segment.name}</cite>\n                        </footer>\n                  </div>\n            </div>\n            // </div>\n            )\n        )}\n      </div>\n      );\n  }\n}\n  \nexport default App;\n\n\n\n\n\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n\n# Example 1\nconst todoItems = [\n  {\n    id: 1,\n    title: \"Go to Market\",\n    description: \"Buy ingredients to prepare dinner\",\n    completed: true,\n  },\n  {\n    id: 2,\n    title: \"Study\",\n    description: \"Read Algebra and History textbook for the upcoming test\",\n    completed: false,\n  },\n  {\n    id: 3,\n    title: \"Sammy's books\",\n    description: \"Go to library to return Sammy's books\",\n    completed: true,\n  },\n  {\n    id: 4,\n    title: \"Article\",\n    description: \"Write article on how to use Django with React\",\n    completed: false,\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      todoList: todoItems,\n    };\n  }\n\n  displayCompleted = (status) => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n\n    return this.setState({ viewCompleted: false });\n  };\n\n  renderTabList = () => {\n    return (\n      <div className=\"nav nav-tabs\">\n        <span\n          className={this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"}\n          onClick={() => this.displayCompleted(true)}\n        >\n          Complete\n        </span>\n        <span\n          className={this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"}\n          onClick={() => this.displayCompleted(false)}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      (item) => item.completed == viewCompleted\n    );\n\n    return newItems.map((item) => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            className=\"btn btn-secondary mr-2\"\n          >\n            Edit\n          </button>\n          <button\n            className=\"btn btn-danger\"\n          >\n            Delete\n          </button>\n        </span>\n      </li>\n    ));\n  };\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"mb-4\">\n                <button\n                  className=\"btn btn-primary\"\n                >\n                  Add task\n                </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush border-top-0\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}